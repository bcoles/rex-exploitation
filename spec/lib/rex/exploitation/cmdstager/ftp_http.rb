# -*- coding:binary -*-
require 'spec_helper'

require 'rex/exploitation/cmdstager'

RSpec.describe Rex::Exploitation::CmdStagerFtpHttp do

  let(:exe) { "MZ" }

  subject(:cmd_stager) do
    described_class.new(exe)
  end

  describe '#cmd_concat_operator' do
    it "returns ;" do
      expect(cmd_stager.cmd_concat_operator).to eq(';')
    end
  end

  describe '#generate' do
    it "returns an array of commands" do
      result = cmd_stager.generate(payload_uri: "http://127.0.0.1/#{Rex::Text.rand_text_alphanumeric(10)}")

      expect(result).to be_kind_of(Array)
      expect(result).to_not be_empty
    end

    it "returns an array of commands without spaces" do
      result = cmd_stager.generate(
        payload_uri: "http://127.0.0.1/#{Rex::Text.rand_text_alphanumeric(10)}",
        nospace: true
      )

      expect(result).to be_kind_of(Array)
      expect(result).to_not be_empty

      for command in result
        expect(command).to_not include(' ')
      end
    end
  end

end
